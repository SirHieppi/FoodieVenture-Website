{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SirHieppi\\\\Documents\\\\GitHub\\\\FoodieVenture\\\\src\\\\components\\\\Results.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport GeneratedPlace from './GeneratedPlace.js'; // Style\n\nimport '../static/styles/results.css';\nexport class Results extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opacity: 0.5,\n      requestJSON: [],\n      categories: [],\n      url: \"https://howardlam546.pythonanywhere.com\"\n    };\n\n    this.startOver = () => {\n      this.props.removeCurrentGuest();\n      this.props.switchToState(\"initial\");\n    };\n\n    this.getPlaces = () => {\n      fetch(this.state.url + '/results/id/' + this.props.userID, {\n        method: 'POST',\n        // headers: {\n        //     'Accept': 'application/json',\n        //     'Content-Type': 'application/json',\n        // },\n        body: JSON.stringify({\n          location: this.props.location,\n          selectedFoodCategories: this.props.selectedFoodCategories\n        })\n      }).then(response => response.json()).then(requestJSON => this.updateResults(requestJSON));\n    };\n\n    this.updateResults = requestJSON => {\n      this.setState({\n        requestJSON: requestJSON\n      });\n    };\n\n    this.reselectCategories = () => {\n      this.props.switchToState(\"selection\");\n    };\n\n    this.renderPlace = j => {\n      console.log(j);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, j.name);\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaces();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ResultsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Generating FoodieVenture near \", this.props.location, \"...\"), React.createElement(\"div\", {\n      className: \"PlacesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Gallery, {\n      index: this.state.imageIndex,\n      onRequestChange: i => {\n        this.setState({\n          imageIndex: i\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.images.map(image => React.createElement(GalleryImage, {\n      key: image,\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), this.state.requestJSON.map((category, index) => React.createElement(GeneratedPlace, {\n      key: index,\n      data: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"UserOptionsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"Refresh\",\n      variant: \"light\",\n      onClick: this.getPlaces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Refresh\"), React.createElement(Button, {\n      className: \"ReselectCategories\",\n      variant: \"light\",\n      onClick: this.reselectCategories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Reselect\"), React.createElement(Button, {\n      className: \"StartOver\",\n      variant: \"light\",\n      onClick: this.startOver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Restart\")));\n  }\n\n}\nexport default Results;","map":{"version":3,"sources":["C:/Users/SirHieppi/Documents/GitHub/FoodieVenture/src/components/Results.js"],"names":["React","Component","Button","GeneratedPlace","Results","state","opacity","requestJSON","categories","url","startOver","props","removeCurrentGuest","switchToState","getPlaces","fetch","userID","method","body","JSON","stringify","location","selectedFoodCategories","then","response","json","updateResults","setState","reselectCategories","renderPlace","j","console","log","name","componentDidMount","render","imageIndex","i","images","map","image","category","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport GeneratedPlace from './GeneratedPlace.js';\r\n\r\n// Style\r\nimport '../static/styles/results.css'\r\n\r\nexport class Results extends Component {\r\n    componentDidMount() {\r\n        this.getPlaces();\r\n    }\r\n\r\n    state = {\r\n        opacity: 0.5,\r\n        requestJSON: [],\r\n        categories: [],\r\n        url: \"https://howardlam546.pythonanywhere.com\"\r\n\r\n    }\r\n\r\n    startOver = () => {\r\n        this.props.removeCurrentGuest();\r\n        this.props.switchToState(\"initial\");\r\n    }\r\n\r\n    getPlaces = () => {\r\n        fetch((this.state.url + ('/results/id/') + this.props.userID), {\r\n            method: 'POST',\r\n            // headers: {\r\n            //     'Accept': 'application/json',\r\n            //     'Content-Type': 'application/json',\r\n            // },\r\n            body: JSON.stringify({\r\n                location: this.props.location,\r\n                selectedFoodCategories: this.props.selectedFoodCategories,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(requestJSON => this.updateResults(requestJSON));\r\n    }\r\n\r\n    updateResults = (requestJSON) => {\r\n        this.setState({ requestJSON: requestJSON })\r\n    }\r\n\r\n    reselectCategories = () => {\r\n        this.props.switchToState(\"selection\");\r\n    }\r\n\r\n    renderPlace = (j) => {\r\n        console.log(j)\r\n\r\n        return (\r\n            <div>\r\n                {j.name}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ResultsContainer\">\r\n                <center>\r\n                    Generating FoodieVenture near {this.props.location}...\r\n                </center>\r\n\r\n                <div className=\"PlacesContainer\">\r\n                    <Gallery\r\n                        index={this.state.imageIndex}\r\n                        onRequestChange={i => {\r\n                            this.setState({ imageIndex: i });\r\n                        }}\r\n                    >\r\n                        {this.state.images.map(image => (\r\n                            <GalleryImage key={image} src={image} />\r\n                        ))}\r\n                    </Gallery>\r\n                    {this.state.requestJSON.map((category, index) => (\r\n                        <GeneratedPlace key={index} data={category} />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"UserOptionsContainer\">\r\n                    <Button className=\"Refresh\" variant=\"light\" onClick={this.getPlaces}>Refresh</Button>\r\n                    <Button className=\"ReselectCategories\" variant=\"light\" onClick={this.reselectCategories}>Reselect</Button>\r\n                    <Button className=\"StartOver\" variant=\"light\" onClick={this.startOver}>Restart</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}