{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SirHieppi\\\\Documents\\\\GitHub\\\\FoodieVenture\\\\src\\\\components\\\\FoodieVenture.js\";\nimport React, { Component } from 'react';\nimport FoodCategory from './FoodCategory'; // import PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button'; // Static Button Images\n\nimport breakfastButtonImage from '../static/breakfastButtonImage.jpg';\nimport lunchButtonImage from '../static/lunchButtonImage.png';\nimport dinnerButtonImage from '../static/dinnerButtonImage.jpg';\nimport coffeeButtonImage from '../static/coffeeButtonImage.jpg';\nimport dessertButtonImage from '../static/dessertButtonImage.png';\nimport bobaButtonImage from '../static/bobaButtonImage.jpg'; // Style\n\nimport '../static/styles/FoodieVenture.css';\n\nclass FoodieVenture extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomBool: true,\n      selectedFoodCategories: [],\n      breakfast: false\n    };\n\n    this.buttons = () => {\n      return React.createElement(\"div\", {\n        className: \"ButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rowOneContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FoodCategory, {\n        img: breakfastButtonImage,\n        name: \"breakfast\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(FoodCategory, {\n        img: lunchButtonImage,\n        name: \"lunch\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(FoodCategory, {\n        img: dinnerButtonImage,\n        name: \"dinner\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"rowTwoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FoodCategory, {\n        img: dessertButtonImage,\n        name: \"dessert\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(FoodCategory, {\n        img: coffeeButtonImage,\n        name: \"coffee\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(FoodCategory, {\n        img: bobaButtonImage,\n        name: \"milkTea\",\n        selectedFoodCategories: this.selectedFoodCategories,\n        setFoodCategoryState: this.setFoodCategoryState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    };\n\n    this.proceed = () => {\n      console.log(\"Proceeding!\"); // No buttons have been selected\n\n      if (this.state.selectedFoodCategories.length === 0) {\n        console.log(\"No buttons have been selected!\");\n      } else {\n        console.log(\"Generating food adventure!\");\n        this.props.switchToState(\"result\");\n        this.props.setSelectedFoodCategories(this.state.selectedFoodCategories);\n      }\n    };\n\n    this.checkSelectedCategoryState = categoryToCheck => {\n      for (var x = 0; x < this.state.selectedFoodCategories.length; x++) {\n        if (categoryToCheck === this.state.selectedFoodCategories[x]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.removeSelectedCategory = category => {\n      this.setState({\n        selectedFoodCategories: this.state.selectedFoodCategories.filter(c => c !== category)\n      });\n    };\n\n    this.addSelectedCategory = category => {\n      this.setState({\n        selectedFoodCategories: this.state.selectedFoodCategories.concat(category)\n      });\n    };\n\n    this.setFoodCategoryState = foodCategory => {\n      if (this.checkSelectedCategoryState(foodCategory)) {\n        this.removeSelectedCategory(foodCategory);\n      } else {\n        this.addSelectedCategory(foodCategory);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"SelectionPageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      className: \"SelectionDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Select categories to generate your very own FoodieVenture!\"), React.createElement(\"div\", {\n      className: \"SelectionButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.buttons()), React.createElement(\"div\", {\n      className: \"ProceedButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.proceed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Proceed\")));\n  }\n\n} // PropTypes\n// FoodieVenture.propTypes = {\n//     foodCategories: PropTypes.array.isRequired\n// }\n\n\nexport default FoodieVenture;","map":{"version":3,"sources":["C:/Users/SirHieppi/Documents/GitHub/FoodieVenture/src/components/FoodieVenture.js"],"names":["React","Component","FoodCategory","Button","breakfastButtonImage","lunchButtonImage","dinnerButtonImage","coffeeButtonImage","dessertButtonImage","bobaButtonImage","FoodieVenture","state","randomBool","selectedFoodCategories","breakfast","buttons","setFoodCategoryState","proceed","console","log","length","props","switchToState","setSelectedFoodCategories","checkSelectedCategoryState","categoryToCheck","x","removeSelectedCategory","category","setState","filter","c","addSelectedCategory","concat","foodCategory","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FoodCategory from './FoodCategory';\r\n// import PropTypes from 'prop-types';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\n// Static Button Images\r\nimport breakfastButtonImage from '../static/breakfastButtonImage.jpg';\r\nimport lunchButtonImage from '../static/lunchButtonImage.png';\r\nimport dinnerButtonImage from '../static/dinnerButtonImage.jpg';\r\nimport coffeeButtonImage from '../static/coffeeButtonImage.jpg';\r\nimport dessertButtonImage from '../static/dessertButtonImage.png';\r\nimport bobaButtonImage from '../static/bobaButtonImage.jpg';\r\n\r\n// Style\r\nimport '../static/styles/FoodieVenture.css'\r\n\r\nclass FoodieVenture extends Component {\r\n    state = {\r\n        randomBool: true,\r\n        selectedFoodCategories: [],\r\n        breakfast: false,\r\n    }\r\n\r\n    buttons = () => {\r\n        return (\r\n            <div className=\"ButtonsContainer\">\r\n                <div className=\"rowOneContainer\">\r\n                    <FoodCategory\r\n                        img={breakfastButtonImage}\r\n                        name=\"breakfast\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n\r\n                    <FoodCategory\r\n                        img={lunchButtonImage}\r\n                        name=\"lunch\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n\r\n                    <FoodCategory\r\n                        img={dinnerButtonImage}\r\n                        name=\"dinner\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n                </div>\r\n\r\n                <div className=\"rowTwoContainer\">\r\n                    <FoodCategory\r\n                        img={dessertButtonImage}\r\n                        name=\"dessert\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n\r\n                    <FoodCategory\r\n                        img={coffeeButtonImage}\r\n                        name=\"coffee\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n\r\n                    <FoodCategory\r\n                        img={bobaButtonImage}\r\n                        name=\"milkTea\"\r\n                        selectedFoodCategories={this.selectedFoodCategories}\r\n                        setFoodCategoryState={this.setFoodCategoryState} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    proceed = () => {\r\n        console.log(\"Proceeding!\");\r\n\r\n        // No buttons have been selected\r\n        if (this.state.selectedFoodCategories.length === 0) {\r\n            console.log(\"No buttons have been selected!\");\r\n        } else {\r\n            console.log(\"Generating food adventure!\");\r\n            this.props.switchToState(\"result\");\r\n            this.props.setSelectedFoodCategories(this.state.selectedFoodCategories);\r\n        }\r\n    }\r\n\r\n    checkSelectedCategoryState = (categoryToCheck) => {\r\n        for (var x = 0; x < this.state.selectedFoodCategories.length; x++) {\r\n            if (categoryToCheck === this.state.selectedFoodCategories[x]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeSelectedCategory = (category) => {\r\n        this.setState({ selectedFoodCategories: this.state.selectedFoodCategories.filter(c => c !== category) })\r\n    }\r\n\r\n    addSelectedCategory = (category) => {\r\n        this.setState({ selectedFoodCategories: this.state.selectedFoodCategories.concat(category) });\r\n    }\r\n\r\n    setFoodCategoryState = (foodCategory) => {\r\n        if (this.checkSelectedCategoryState(foodCategory)) {\r\n            this.removeSelectedCategory(foodCategory);\r\n        } else {\r\n            this.addSelectedCategory(foodCategory);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SelectionPageContainer\">\r\n                <center className=\"SelectionDescription\">\r\n                    Select categories to generate your very own FoodieVenture!\r\n            </center>\r\n                <div className=\"SelectionButtons\">\r\n                    {this.buttons()}\r\n                </div>\r\n\r\n                <div className=\"ProceedButton\">\r\n                    <Button variant=\"success\" onClick={this.proceed}>Proceed</Button>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n// PropTypes\r\n// FoodieVenture.propTypes = {\r\n//     foodCategories: PropTypes.array.isRequired\r\n// }\r\n\r\nexport default FoodieVenture;\r\n"]},"metadata":{},"sourceType":"module"}